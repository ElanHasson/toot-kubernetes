apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: mastodon
    app.kubernetes.io/name: mastodon
  name: mastodon-web
  namespace: mastodon
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: web
      app.kubernetes.io/instance: mastodon
      app.kubernetes.io/name: mastodon
      app.kubernetes.io/part-of: rails
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: web
        app.kubernetes.io/instance: mastodon
        app.kubernetes.io/name: mastodon
        app.kubernetes.io/part-of: rails
    spec:
      containers:
        - command:
            - bundle
            - exec
            - puma
            - -C
            - config/puma.rb
          env:
            - name: PORT
              value: "3000"
          envFrom:
            - configMapRef:
                name: mastodon-env
            - secretRef:
                name: mastodon-secrets-env
          image: tootsuite/mastodon:v4.0.2
          imagePullPolicy: IfNotPresent
          name: mastodon
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            httpGet:
              port: http
              path: /health
            periodSeconds: 3
            failureThreshold: 30
          resources:
            requests:
              cpu: 1000m
              memory: 1000Mi
      restartPolicy: Always
      securityContext:
        fsGroup: 991
        runAsGroup: 991
        runAsUser: 991
      serviceAccountName: mastodon
      terminationGracePeriodSeconds: 30
