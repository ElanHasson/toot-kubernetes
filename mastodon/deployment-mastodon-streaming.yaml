apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: mastodon
    app.kubernetes.io/name: mastodon
  name: mastodon-streaming
  namespace: mastodon
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/component: streaming
      app.kubernetes.io/instance: mastodon
      app.kubernetes.io/name: mastodon
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/component: streaming
        app.kubernetes.io/instance: mastodon
        app.kubernetes.io/name: mastodon
    spec:
      containers:
        - command:
            - bash
            - -c
            - 'sed -i ''s/pgConfigs.production.ssl = true;/pgConfigs.production.ssl =
          { rejectUnauthorized: false, };/g'' streaming/index.js && node ./streaming'
          env:
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  key: DB_PASS
                  name: mastodon-secrets-env
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: REDIS_PASSWORD
                  name: mastodon-secrets-env
            - name: PORT
              value: "4000"
          envFrom:
            - configMapRef:
                name: mastodon-env
          image: tootsuite/mastodon:v4.0.2
          imagePullPolicy: IfNotPresent
          name: mastodon
          ports:
            - containerPort: 4000
              name: streaming
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/v1/streaming/health
              port: streaming
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            httpGet:
              port: streaming
              path: /api/v1/streaming/health
            periodSeconds: 3
            failureThreshold: 30
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
      restartPolicy: Always
      securityContext:
        fsGroup: 991
        runAsGroup: 991
        runAsUser: 991
      serviceAccountName: mastodon
      terminationGracePeriodSeconds: 30
