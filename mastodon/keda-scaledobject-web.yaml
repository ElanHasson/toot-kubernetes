apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  labels:
    app.kubernetes.io/instance: mastodon
    app.kubernetes.io/name: mastodon
    scaledobject.keda.sh/name: web
  name: web
  namespace: mastodon
spec:
  cooldownPeriod: 30
  maxReplicaCount: 20
  minReplicaCount: 2
  pollingInterval: 15
  scaleTargetRef:
    name: mastodon-web
  fallback:
    # this is tuned to the maximum value of web pods that can fit on two nodes (min node pool size),
    # at this point we have no idea how many req/sec we're getting, so we're setting up for max capacity.
    replicas: 6
    failureThreshold: 4 # allows prometheus to be down for (4 * 15) seconds before going to fallback
  triggers:
    - type: prometheus
      metadata:
        serverAddress: http://prometheus-server.monitoring.svc.cluster.local
        metricName: access_frequency
        query: sum(rate(nginx_ingress_controller_requests{service="mastodon-web"}[1m]))
        threshold: '25'
        ignoreNullValues: "false"
  advanced:
    restoreToOriginalReplicaCount: false
    horizontalPodAutoscalerConfig:
      behavior:
        scaleDown:
          stabilizationWindowSeconds: 600
